services:
  ## ---------------------------------
  ##  1. INFRASTRUCTURE SERVICES
  ## ---------------------------------
  mysql:
    image: mysql:latest
    container_name: auctiondb
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD} # Ensure this is in your .env file
    ports: ["3306:3306"] # Exposes MySQL on localhost:3306
    volumes:
      - ./mysql-init/init.sql:/docker-entrypoint-initdb.d/init.sql
      ## It's safer to use named volumes or relative paths for data persistence
      ## - mysql-data:/var/lib/mysql
      - /var/lib/docker/volumes/4489495f60175f8abaed5bc0313e0f272f001f51f7d85c37a34e70cfe6311bd6/_data:/var/lib/mysql
    networks: [app-network]
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:latest
    container_name: auction-redis
    restart: unless-stopped
    ports: ["6379:6379"] # Exposes Redis on localhost:6379
    networks: [app-network]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      retries: 5

  rabbitmq:
    build:
      context: ./rabbitmq/plugins
    container_name: rabbitmq
    restart: unless-stopped
    ports:
      - "5672:5672"    # AMQP port, exposes on localhost:5672
      - "15672:15672" # Management UI, exposes on localhost:15672
    volumes:
      - ./rabbitmq/conf:/etc/rabbitmq
      - ./rabbitmq/definitions.json:/etc/rabbitmq/definitions.json
      - rabbitmq-data:/var/lib/rabbitmq
    networks: [app-network]
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_running", "-q"]
      interval: 10s
      retries: 5

  keycloak:
    image: quay.io/keycloak/keycloak:26.2.0
    container_name: keycloak
    command: start --hostname=${HOSTNAME}
    restart: unless-stopped
    ports:
        - "8443:8443"
    environment:
        KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN_USER}
        KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
        KC_HEALTH_ENABLED: "true"
        KC_HTTPS_CERTIFICATE_FILE: /etc/keycloak/certs/certificate.crt
        KC_HTTPS_CERTIFICATE_KEY_FILE: /etc/keycloak/certs/private.key
    volumes:
        - keycloak-data:/opt/keycloak/data
        - ./keycloak-local-certs:/etc/keycloak/certs:ro
    networks: [app-network]


networks:
  app-network:
    driver: bridge

volumes:
  ## mysql-data: {} # Uncomment if you switch mysql volume to a named volume
  keycloak-data: {}
  rabbitmq-data: {}
